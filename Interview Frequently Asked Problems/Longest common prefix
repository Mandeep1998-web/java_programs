package mandeep;

public class Longestprefixstring {
    public static String check(String[] matrix){

        if(0==matrix.length){ // here i write 0 because if you forget to compare and write assign then this will give error
            //and i took length here only because this time it is array of string
        return "";//return null
        }
        for(int prefixlen=0;prefixlen<matrix[0].length();prefixlen++)
        //here to find the no of columns i have to find the length of first string
        {
            char firstelment=matrix[0].charAt(prefixlen);
            for(int i=1;i<matrix.length;i++){
           if(prefixlen>=matrix[i].length()|| matrix[i].charAt(prefixlen)!=firstelment)
           /*
           so my prefix is equalto length of the row or greater then that particular row that means 
           it is of type when my first row is ravi and second is only r so here my prefix is 1 and that is
           equivalent to length of second row so it should stop because there is nothing after r
            */
           {
               return matrix[0].substring(0,prefixlen);//it exlusive the last one
           }
            }
        }
        return matrix[0];// here everything traverse fine then i return whole string
    }

    public static void main(String[] args) {
        String[] testCase1 ={"flow","flower","flowerist"};
        String[] testCase2 ={"class","nothing","nursing"};
        String[] testCase3 ={"flow","flowe",""};

        Longestprefixstring longestprefixstring=new Longestprefixstring();
        System.out.println(longestprefixstring.check(testCase1));
        System.out.println(longestprefixstring.check(testCase2));
        System.out.println(longestprefixstring.check(testCase3));


    }
}
